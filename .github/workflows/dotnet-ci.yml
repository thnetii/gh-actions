name: .NET Continuous Integration

on:
  - pull_request
  - push

defaults:
  run:
    shell: pwsh

jobs:
  dotnet:
    strategy:
      matrix:
        configuration:
          - debug
          - release
        runtime:
          - agnostic
          - windows
          - linux
          - macos
        targetFramework:
          - project
          - netstandard2.0
          - netstandard2.1
        exclude:
          - configuration: debug
            runtime: windows
          - configuration: debug
            runtime: linux
          - configuration: debug
            runtime: macos
          - configuration: debug
            targetFramework: netstandard2.0
          - configuration: debug
            targetFramework: netstandard2.1
        include:
          - configuration: debug
            configuration.id: Debug
            configuration.display: Debug
          - configuration: release
            configuration.id: Release
            configuration.display: Release
          - runtime: agnostic
            os: windows-latest
          - runtime: windows
            os: windows-latest
            runtime.id: win10-x64
            runtime.display: (Windows, 64-bit)
          - runtime: linux
            os: ubuntu-latest
            runtime.id: linux-x64
            runtime.display: (Linux, 64-bit)
          - runtime: macos
            os: macos-latest
            runtime.id: osx-x64
            runtime.display: (macOS, 64-bit)
          - targetFramework: netstandard2.0
            targetFramework.id: netstandard2.0
            targetFramework.display: for .NET Standard 2.0
          - targetFramework: netstandard2.1
            targetFramework.id: netstandard2.1
            targetFramework.display: for .NET Standard 2.1
    name: ${{ matrix['configuration.display'] }} ${{ matrix['runtime.display'] }} ${{ matrix['targetFramework.display'] }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Chekout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Prepare .NET SDK action
        uses: ./def/dotnet-sdk/prepare
      - name: .NET Version Information
        uses: ./def/dotnet-version-info
      - name: dotnet restore
        uses: ./def/dotnet-sdk
        with:
          command: restore
          project: |
            *.sln
          configuration: ${{ matrix['configuration.id'] }}
          framework: ${{ matrix['targetFramework.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
      - name: dotnet build
        uses: ./def/dotnet-sdk
        with:
          command: build
          project: |
            *.sln
          configuration: ${{ matrix['configuration.id'] }}
          framework: ${{ matrix['targetFramework.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
      - name: dotnet test
        uses: ./def/dotnet-sdk
        if: ${{ runner.os }} != 'Windows'
        with:
          command: test
          project: |
            [Tt]ests?/**/*.*proj
          configuration: ${{ matrix['configuration.id'] }}
          framework: ${{ matrix['targetFramework.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
      - name: dotnet test
        uses: ./def/dotnet-sdk
        if: ${{ runner.os }} == 'Windows'
        with:
          command: test
          project: |
            [Tt]ests?/**/*.*proj
          configuration: ${{ matrix['configuration.id'] }}
          framework: ${{ matrix['targetFramework.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
          dotnet-arguments: |
            --collect
            Code Coverage
